<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baomidou.mybatisplus.samples.generator.mapper.UsersMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.baomidou.mybatisplus.samples.generator.entity.Users">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="mobile" property="mobile" />
        <result column="password" property="password" />
        <result column="avator" property="avator" />
        <result column="introduction" property="introduction" />
        <result column="last_token" property="lastToken" />
        <result column="IS_DELETE" property="isDelete" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>
<!--查询整个表-->
    <select id="findAll" parameterType="Users">
        select * from  users;
    </select>

<!--添加用户-->
    <insert id="addUser" parameterType="Users">
        insert into users (name,password,mobile,introduction,avator)
        values (#{name},#{password},#{mobile},#{introduction},#{avator})
    </insert>

<!--通过id查看用户-->
    <select id="findById" resultType="Users" parameterType="Long">
        select * from users where id = #{id};
    </select>

<!--删除单个用户-->
    <delete id="deleteById" parameterType="Users">
    	update users set IS_DELETE = '1'
    	where id = #{id}
  	</delete>

<!--删除所有用户-->
    <delete id="deleteAll" parameterType="Users">
    	update users set IS_DELETE = '1'
  	</delete>

<!-- 批量删除 -->
    <delete id="deleteMore" parameterType="int[]">
        <!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item
            : 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
        update users set IS_DELETE = '1'
         where id in
        <foreach collection="array" item="arr" index="no" open="("
                 separator="," close=")">
            #{arr}
        </foreach>
    </delete>

<!--通过id修改用户信息-->
        <update id="setById" parameterType="Users">
            update users set introduction=#{introduction},avator=#{avator}
            where id=#{id}
        </update>

<!--修改密码-->
    <update id="updatePassword" parameterType="Users">
        <!--id要与抽象方法的方法名保持一致，否则会报错 -->
        update users
        set
        <if test="password!=null">
            password=#{password}
        </if>
        where id=#{id}
    </update>


<!--登录-->
        <select id="login" resultType="Users">
		select * from users where name = #{name} and and password=#{password}
	</select>





</mapper>
